#lang racket
(define (reverse result leftover)
       (if (< leftover 10)
        (+ (* 10 result) leftover)
        (reverse (+(* result 10)(remainder leftover 10))(quotient leftover 10))
       )
     )
(define (palindrome? n)
     (if (negative? n)
      (error "n must be non-neggative!")
      (=(reverse 0 n) n)
      )     
  )
(equal? (palindrome? 1) #t)
(equal? (palindrome? 6) #t)
(equal? (palindrome? 1010) #f)
(equal? (palindrome? 505) #t)
(equal? (palindrome? 123321) #t)
(equal? (palindrome? 654) #f)
(equal? (palindrome? 121) #t)
(equal? (palindrome? 12) #f)
(equal? (palindrome? 120) #f)
(equal? (palindrome? 12321) #t)
(equal? (palindrome? 1221) #t)
(equal? (palindrome? 13431) #t); my test